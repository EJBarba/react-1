{"version":3,"sources":["components/Topics/EvenAndOdd.js","components/Topics/FilterObject.js","components/Topics/FilterString.js","components/Topics/Palindrome.js","components/Topics/Sum.js","components/TopicBrowser/TopicBrowser.js","App.js","index.js"],"names":["EvenAndOdd","_useState","useState","_useState2","Object","slicedToArray","evens","setEvens","_useState3","_useState4","odds","setOdds","_useState5","_useState6","userInput","setUserInput","react_default","a","createElement","className","onChange","e","target","value","onClick","input","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","split","map","v","parseInt","Symbol","iterator","next","done","val","push","err","return","solve","JSON","stringify","FilterObject","name","title","age","yearsEmployed","unFilteredArray","filteredArray","setFilteredArray","filtered","filter","o","FilterString","names","filteredNames","setFilteredNames","string","includes","Palindrome","answer","setAnswer","word","normalizedWord","toLowerCase","reversedWord","reverse","join","checkPalindrome","Sum","sum","setSum","n","reduce","acc","getSum","TopicBrowser","Fragment","App","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.86ac87f5.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function EvenAndOdd() {\n  const [ evens, setEvens ] = useState([]);\n  const [odds, setOdds] = useState([]);\n  const [userInput, setUserInput] = useState('');\n\n  function solve(input) {\n    const results = {\n      evens: [],\n      odds: [],\n    }\n    for (let val of input.split(',').map(v => parseInt(v))) {\n      if (val % 2 === 0) {\n        results.evens.push(val);\n      } else {\n        results.odds.push(val);\n      }\n    }\n\n    setEvens(results.evens);\n    setOdds(results.odds);\n  }\n\n  return (\n    <div className=\"puzzleBox evenAndOddPB\">\n      <h4>Evens and Odds</h4>\n      <input className=\"inputLine\" onChange={e => setUserInput(e.target.value)}/>\n      <button className=\"confirmationButton\" onClick={() => solve(userInput)}>Split</button>\n      <span className=\"resultsBox\">Evens: {JSON.stringify(evens)}</span>\n      <span className=\"resultsBox\">Odds: {JSON.stringify(odds)}</span>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\n\nexport default function FilterObject() {\n  const [unFilteredArray, setUnFilteredArray] = useState([\n    { name:  'John', title: 'Junior Developer', age: 20 },\n    { name: 'Bob', title: 'Development Manager', age: 32, yearsEmployed: 2 },\n    { name: 'Lisa', title: 'Senior Developer' },\n  ]);\n  const [filteredArray, setFilteredArray] = useState([]);\n  const [userInput, setUserInput] = useState('');\n\n  function filter(input) {\n    const filtered = unFilteredArray.filter(o => {\n      if (o[input]) {\n        return true;\n      }\n\n      return false\n    })\n\n    setFilteredArray(filtered);\n  }\n\n  return (\n    <div className=\"puzzleBox filterObjectPB\">\n      <h4>Filter Object</h4>\n      <span className=\"puzzleText\">Original: {JSON.stringify(unFilteredArray, null, 10)}</span>\n      <input className=\"inputLine\" onChange={e => setUserInput(e.target.value)}/>\n      <button className=\"confirmationButton\" onClick={() => filter(userInput)}>Filter</button>\n      <span className=\"resultsBox filterObjectRB\">Filtered: {JSON.stringify(filteredArray, null, 10)}</span>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\n\nexport default function FilterString() {\n  const [names, setNames] = useState([\n    'James',\n    'Jessica',\n    'Melody',\n    'Tyler',\n    'Blake',\n    'Jennifer',\n    'Mark',\n    'Maddy',\n  ]);\n  const [filteredNames, setFilteredNames] = useState([]);\n  const [userInput, setUserInput] = useState('');\n\n  function filterNames(string) {\n    setFilteredNames(\n      names.filter(name => name.includes(string))\n    )\n  }\n\n  return (\n    <div className=\"puzzleBox filterStringPB\">\n      <h4> Filter String </h4>\n      <span className=\"puzzleText\">\n        {' '}\n        Names: {JSON.stringify(names, null, 10)}{' '}\n      </span>\n      <input className=\"inputLine\" onChange={e => setUserInput(e.target.value)}/>\n      <button className=\"confirmationButton\" onClick={() => filterNames(userInput)}> Filter </button>\n      <span className=\"resultsBox filterStringRB\">\n        {' '}\n        Filtered Names: {JSON.stringify(filteredNames, null, 10)}{' '}\n      </span>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n\nexport default function Palindrome() {\n  const [userInput, setUserInput] = useState('');\n  const [answer, setAnswer] = useState('Enter a word to check');\n\n  function checkPalindrome(word) {\n    const normalizedWord = word.toLowerCase();\n    const reversedWord = normalizedWord\n      .split('')\n      .reverse()\n      .join('');\n    setAnswer(normalizedWord === reversedWord);\n  }\n\n  return (\n    <div className=\"puzzleBox palindromePB\">\n      <h4>Palindrome</h4>\n      <input\n        className=\"inputLine\"\n        onChange={e => setUserInput(e.target.value)}\n      />\n      <button\n        className=\"confirmationButton\"\n        onClick={() => checkPalindrome(userInput)}\n      >\n        Check\n      </button>\n      <span className=\"resultsBox\">{JSON.stringify(answer)}</span>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n\nexport default function Sum() {\n  const [userInput, setUserInput] = useState('');\n  const [sum, setSum] = useState();\n\n  function getSum(input) {\n    const sum = input\n      .split(',')\n      .map(n => parseInt(n))\n      .reduce((acc, n) => {\n        acc += n;\n        return acc;\n      }, 0);\n\n    setSum(sum);\n  }\n\n  return (\n    <div className=\"puzzleBox sumPB\">\n      <h4>Sum</h4>\n      <input\n        className=\"inputLine\"\n        onChange={e => setUserInput(e.target.value)}\n      />\n      <button className=\"confirmationButton\" onClick={() => getSum(userInput)}>\n        Add\n      </button>\n      <span className=\"resultsBox\">{JSON.stringify(sum)}</span>\n    </div>\n  );\n}\n","import React from 'react';\nimport EvenAndOdd from '../Topics/EvenAndOdd';\nimport FilterObject from '../Topics/FilterObject';\nimport FilterString from '../Topics/FilterString';\nimport Palindrome from '../Topics/Palindrome';\nimport Sum from '../Topics/Sum';\n\nexport default function TopicBrowser() {\n  return (\n    <React.Fragment>\n      <EvenAndOdd />\n      <FilterObject />\n      <FilterString />\n      <Palindrome />\n      <Sum />\n    </React.Fragment>\n  )\n}\n","import React from 'react';\nimport './index.css';\n\nimport TopicBrowser from './components/TopicBrowser/TopicBrowser';\n\nfunction App() {\n  return (\n    <TopicBrowser />\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}